syntax = "proto3";
package sunrise.liquiditypool.v1;

import "amino/amino.proto";
import "gogoproto/gogo.proto";

import "google/protobuf/duration.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/sunriselayer/sunrise/x/liquiditypool/types";

// Params defines the parameters for the module.
message Params {
  option (amino.name) = "sunrise/x/liquiditypool/v1/Params";
  option (gogoproto.equal) = true;

  string swap_treasury_tax_rate = 1 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
  string swap_interface_fee_rate = 2 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
  string pool_exit_fee_rate = 3 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
  google.protobuf.Duration twap_window = 4 [
    (gogoproto.stdduration) = true,
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
  google.protobuf.Duration twap_expiry = 5 [
    (gogoproto.stdduration) = true,
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
}